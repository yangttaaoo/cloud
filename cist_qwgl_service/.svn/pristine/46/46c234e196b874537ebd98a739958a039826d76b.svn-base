package com.cist.qwgl.xqgl.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cist.frame.page.PageInfo;
import com.cist.qwgl.bcgl.model.DeptInfo;
import com.cist.qwgl.qylxgl.model.QWGL_QYLX_TYPE;
import com.cist.qwgl.xqgl.model.QWGL_QY_TYPE;
import com.cist.qwgl.xqgl.model.QWGL_XQGL_INFO;
import com.cist.qwgl.xqgl.service.XqglService;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

@RestController
@RequestMapping("xqgl")
@SuppressWarnings("unchecked")
public class XqglController {
	@Autowired
	private XqglService service;
	/**
	 * 查询巡区信息
	 * @param map
	 * @return
	 */
	@RequestMapping("queryxq")
	public PageInfo<QWGL_XQGL_INFO> queryxq(@RequestBody HashMap<String,Object> map){
		PageInfo info = new PageInfo();
		if(map.get("currentPage")!=null){
			info.setPageNum( Integer.parseInt(map.get("currentPage").toString()) );
		}else{
			info.setPageNum(1);
		}
		if(map.get("pageSize")!=null){
			info.setPageSize(Integer.parseInt(map.get("pageSize").toString()) );
		}else{
			info.setPageSize(9);
		}
		PageInfo<QWGL_XQGL_INFO> pageinfo = (PageInfo<QWGL_XQGL_INFO>) service.queryxqpageList(map, info);
		HashMap<String,Object> map1 = null;
		for (int i = 0; i < pageinfo.getList().size(); i++) {
			map1 = new HashMap<String,Object>();
			map1.put("qy_pk", pageinfo.getList().get(i).getQy_type());
			pageinfo.getList().get(i).setQy_type_name(service.queryqytype(map1).get(0).getQy_type_name());
			pageinfo.getList().get(i).setDept_name(service.querydeptname(pageinfo.getList().get(i).getDept_code()));
		}
		return pageinfo;
	}
	/**
	 * 查询区域类型
	 * @return
	 */
	@RequestMapping("queryqytype")
	public List<QWGL_QYLX_TYPE> queryqytype(){
		return service.queryqylx(null);
	}
	/**
	 * 添加巡区信息
	 * @param map
	 * @return
	 */
	@RequestMapping("add")
	public Integer addxqgl(@RequestBody HashMap<String,Object> map) {
		if(service.querymaxpk()==null) {
			map.put("pk", 1);
		}else {
			int i=service.querymaxpk();
			map.put("pk", i+1);
		}
		return service.addxqgl(map);
	}
	/**
	 * 更新巡区信息
	 * @param map
	 * @return
	 */
	@RequestMapping("update")
	public Integer updatexqgl(@RequestBody HashMap<String,Object> map) {
		return service.updatexqgl(map);
	}
	/**
	 * (单条/批量)删除巡区信息
	 * @param map
	 * @return
	 */
	@RequestMapping("delete")
	public Integer deletexqgl(@RequestBody HashMap<String,Object> map) {
		// 判断是否为空或者空字符串及删除类型（单条删除或者批量删除）
		String pk = map.get("pk").toString();
		if (null != pk && pk != "" && pk.indexOf(",") != -1) {
			pk = pk.substring(0, pk.length() - 1);
			String sbb[] = pk.split(",");
			map.put("pk", sbb);
		} else {
			String[] sbb = new String[1];
			sbb[0] = pk;
			map.put("pk", sbb);
		}
		return service.deletexqgl(map);
	}
}
