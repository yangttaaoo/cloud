package com.cist.home.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.cist.home.model.DeviceInfo;
import com.cist.home.model.EventFlowInfo;
import com.cist.home.model.EventInfo;
import com.cist.home.model.GpsRecord;
import com.cist.home.model.Jcsj_police_res_person;
import com.cist.home.model.Jcsj_police_resources;
import com.cist.home.model.PoliceInfo;
import com.cist.home.model.Tbl_car_reco;
import com.cist.home.model.Zhdd_event_acceptance;
import com.cist.home.model.Zhdd_event_personnel;
import com.cist.home.model.Zhdd_event_result;
import com.cist.home.model.Zhdd_sms_template;
import com.cist.home.model.Zhdd_work_flow;
import com.cist.home.service.HomeService;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;


/***
 * 
 * @Title:  PersonalEntryController.java   
 * @Package com.cist.personalentry.controller
 * @Description:    指挥调度主页面
 * @author: 王涛
 * @date:   2018年12月04日 上午11:01:00 
 * @version V1.0
 */
@RestController
@RequestMapping("/homecommand")
public class HomeController {
	
	@Autowired
	private HomeService service;
	
	/**
	 * 设备列表查询
	 * @param map
	 */
	@RequestMapping("devicelist")
	public HashMap<String, Object>  DeviceList(@RequestBody HashMap<String, Object> map){			
		List<DeviceInfo> Appraiselist = service.DeviceList();
		List<GpsRecord> gpsRecordList = service.gpsRecordList(map);
		map.put("Appraiselist", Appraiselist);//设备
		map.put("gpsRecordList", gpsRecordList);//警员警车信息
		return map;
	}
	/***
	 * 获取警员信息
	 * @param modelMap
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("personpageliist")
	public PageInfo<Jcsj_police_res_person> personpageliist(@RequestBody HashMap<String,Object> modelMap) throws Exception{
			Integer pageSize= Integer.parseInt(modelMap.get("pageSize").toString());//每页有显示多少条
			//获取分页数据位置,每页显示16条数据
	 		PageHelper.startPage(Integer.valueOf(modelMap.get("currentPage").toString()),pageSize, true);
			List<Jcsj_police_res_person> list= service.jcsj_police_res_personpageliist(modelMap);
			PageInfo<Jcsj_police_res_person> pageinfo=new PageInfo<Jcsj_police_res_person>(list,5);
		return pageinfo;
	}
	/***
	 * 工作流程
	 * @param modelMap
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("workflow")
	public List<Zhdd_work_flow> workflow(@RequestBody HashMap<String,Object> modelMap) throws Exception{
		List<Zhdd_work_flow> list= service.zhdd_work_flow(modelMap);
		return list;
	}
	/***
	 * 查询短信模板
	 * @param modelMap
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("smstemplate")
	public List<Zhdd_sms_template> smstemplate(@RequestBody HashMap<String,Object> modelMap) throws Exception{
		List<Zhdd_sms_template> list= service.zhdd_sms_template(modelMap);
		return list;
	}
	
	/**
	 * 警员警车信息
	 * @param map
	 */
	@RequestMapping("gpsRecordList")
	public List<GpsRecord>  gpsRecordList(@RequestBody HashMap<String, Object> map){			
		List<GpsRecord> gpsRecordList = service.gpsRecordList(map);
		return gpsRecordList;
	}
	/**
	 * 5.23. 警务资源信息 设备编号
	 * @param map
	 */
	@RequestMapping("jcsjpolice")
	public Jcsj_police_resources  jcsjpolice_resperson(@RequestBody HashMap<String, Object> map){	
		return service.jcsjpolice_resperson(map);
	}
	/**
	 * 5.23.查询警员信息
	 * @param map
	 */
	@RequestMapping("jcsjpoliceresperson")
	public Jcsj_police_res_person  jcsjpoliceresperson(@RequestBody HashMap<String, Object> map){	
		return service.Jcsjpoliceresperson(map);
	}
	/**
	 * 5.23.卡口数据
	 * @param map
	 */
	@RequestMapping("tblcarreco")
	public Tbl_car_reco  tbl_car_reco(@RequestBody HashMap<String, Object> map){	
		return service.tbl_car_reco(map);
	}
	/**
	 * 事件查询
	 * @param map
	 */
	@RequestMapping("eventinfo")
	public HashMap<String, Object>   EventList(@RequestBody HashMap<String, Object> map){	
		map.put("sjzt", null);
		List<EventInfo> eventlist1 =service.EventList(map);//未受理
		map.put("sjzt", 4);
		List<EventInfo> eventlist2 =service.EventList(map);//已受理
		map.put("eventlist2", eventlist2);
		map.put("eventlist1", eventlist1);
		return map;
	}
	@RequestMapping("addzhddeventacceptance")
	public Integer  addzhddeventacceptance(@RequestBody HashMap<String, Object> map,HttpServletRequest request){	
		HttpSession session = request.getSession();
		Map<String,Object> userMap = (Map<String,Object>)session.getAttribute("userInfo"+session.getId());
		map.put("fk_acceptance_dept_id", userMap.get("sypi_dept_pk"));//操作人单位ID
		 map.put("fk_acceptance_person_id", userMap.get("sypi_pk"));//操作人ID
		//添加受理信息
		service.addzhddeventacceptance(map);
		return service.updatezhddeventinformation(map);
	}
	
	/**
	 * 警员信息查询
	 * @param map
	 */
	@RequestMapping("policeinfo")
	public Jcsj_police_res_person PoliceList(@RequestBody HashMap<String, Object> map){			
		Jcsj_police_res_person policelist = service.PoliceList(map);
		return policelist;
	}
	/**
	 * 警员任务信息查询
	 * @param map
	 */
	@RequestMapping("eventpoliceinfo")
	public List<EventInfo> EventPoliceList(@RequestBody HashMap<String, Object> map){			
		List<EventInfo> policelist = service.EventPoliceList(map);
		return policelist;
	}
	/**
	 * 单条任务详情信息查询
	 * @param map
	 */
	@RequestMapping("eventflowinfo")
	public EventInfo EventFlowList(@RequestBody HashMap<String, Object> map){			
		EventInfo eventlist = service.EventFlowList(map);
		return eventlist;
	}
	/**
	 * 单条任务流程详情信息查询
	 * @param map
	 */
	@RequestMapping("eventresultinfo")
	public List<EventFlowInfo> EventResultList(@RequestBody HashMap<String, Object> map){			
		List<EventFlowInfo> eventlist = service.EventResultList(map);
		return eventlist;
	}
	/**
	 * 事件流程
	 * @param map
	 */
	@RequestMapping("shijianlc")
	public HashMap<String, Object> shijianlc(@RequestBody HashMap<String, Object> map){			
		map.put("shhoulixishij", service.shhoulixishij(map));//接到报警  事件表
		map.put("shhoulixi", service.shhoulixi(map));//受理信息表
		map.put("eventresult", service.eventresult(map));//事件成功返回结果
		map.put("eventflowinfolist", service.eventflowinfolist(map));//4.9. 事件处置流程
		
		return map;
	}
	/**
	 * 保存调度信息
	 * @param map
	 * @return
	 */
	@RequestMapping("adddiaodu")
	public Integer adddiaodu(@RequestBody HashMap<String, Object> map,HttpServletRequest request){	
		HttpSession session = request.getSession();
		Map<String,Object> userMap = (Map<String,Object>)session.getAttribute("userInfo"+session.getId());
		map.put("fk_acceptance_dept_id", userMap.get("sypi_dept_pk"));//操作人单位ID
		 map.put("fk_acceptance_person_id", userMap.get("sypi_pk"));//操作人ID	
		 map.put("fk_dispatch_person_id", userMap.get("sypi_pk"));//调度人ID
		service.addzhddeventacceptance(map);//保存受理信息
		service.addzhddeventdispatch(map);//4.7. 事件调度信息
		String pk_id_p=map.get("pk_id_p").toString();
		String persondata=map.get("persondata").toString();
		List<Zhdd_event_personnel> policList=new ArrayList<Zhdd_event_personnel>();
		String pk[]=persondata.split(",");
		for (String string : pk) {//
			Zhdd_event_personnel zhdd=new Zhdd_event_personnel();
			zhdd.setFk_event_dispatch_id(Integer.valueOf(pk_id_p));
			zhdd.setFk_event_id(Integer.valueOf(map.get("fk_event_id").toString()));
			zhdd.setFk_person_id(Integer.valueOf(string));
			policList.add(zhdd);
		}
		service.addzhdd_event_personnel(policList);//4.8. 事件处置人员
		map.put("event_current_status", 0);
		int a=service.updatezhddeventinf(map);//事件信息状态改变0已受理    ->事件当前状态（4未受理-查询事件受理信息、0已受理、1未调度、2已调度-查询事件处理流程、3已完成查询事件结果）
		return a;
	}
}
