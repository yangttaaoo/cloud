<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.cist.devmanagement.mapper.DevManagementMapper">
	<!-- 查询采集设备信息 -->
	<select id="list"
		resultType="com.cist.devmanagement.model.SssbEquipmentRegister"
		parameterType="java.util.HashMap">
		select * from VW_SSSB_EQUIPMENT_REGISTER
		<where>
			<if test="sblx != null and sblx != ''">
				and sblx=#{sblx}
			</if>
			<if test="fk_dept_id != null and fk_dept_id != ''">
				and fk_dept_id=#{fk_dept_id}
			</if>
			<if test="equipment_name != null and equipment_name != ''">
				and equipment_name like '%'||#{equipment_name}||'%'
			</if>
			<if test="ip_addr != null and ip_addr != ''">
				and ip_addr like '%'||#{ip_addr}||'%'
			</if>
			<if test="status != null and status != ''">
				and status=#{status}
			</if>
		</where>

	</select>
	
	<!-- 新增设备注册信息 -->
	<insert id="addRegister" parameterType="java.util.HashMap">
		<selectKey keyProperty="pk_id"
			resultType="java.lang.Integer" order="BEFORE">
			select
			cistsys.SEQ_SSSB_EQUIPMENT_REGISTER.NEXTVAL as pk_id from dual
		</selectKey>
		insert into SSSB_EQUIPMENT_REGISTER
		(PK_ID,EQUIPMENT_TYPE,EQUIPMENT_NAME,DAC_IP,EQUIPMENT_AADR,STATUS,reasons)
		values(
		#{pk_id},
		#{equipment_type},
		#{equipment_name},
		#{dac_ip},
		#{equipment_aadr,jdbcType=VARCHAR},
		'2',
		#{reasons,jdbcType=VARCHAR}
		)
	</insert>

	<!-- 新增设备信息 -->
	<insert id="addGather" parameterType="java.util.HashMap">
		insert into
		SSSB_EQUIPMENT_GATHER
		(FK_EQUIPMENT_ID,EQUIPMENT_MODEL,EQUIPMENT_TYPE,FK_DEPT_ID,CHARGER_PERSON
		,CHARGER_CONTACT_NUMBER,IP_ADDR,MAC_ADDR,PORT,DESCRIPTION,SUPPLIER,SUPPLIER_CONTACT_NUMBER)
		values(
		#{pk_id},
		#{equipment_model,jdbcType=VARCHAR},
		#{sblx},
		#{fk_dept_id},
		#{charger_person,jdbcType=VARCHAR},
		#{charger_contact_number,jdbcType=VARCHAR},
		#{ip_addr,jdbcType=VARCHAR},
		#{mac_addr,jdbcType=VARCHAR},
		#{port,jdbcType=VARCHAR},
		#{description,jdbcType=VARCHAR},
		#{supplier,jdbcType=VARCHAR},
		#{supplier_contact_number,jdbcType=VARCHAR}
		)
	</insert>
	
	

	<!-- 更新设备注册信息 -->
	<update id="updateRegister" parameterType="java.util.HashMap">

		update SSSB_EQUIPMENT_REGISTER
		<set>
			EQUIPMENT_TYPE = #{equipment_type,jdbcType=VARCHAR},
			EQUIPMENT_NAME = #{equipment_name,jdbcType=VARCHAR},
			DAC_IP =
			#{dac_ip,jdbcType=VARCHAR},
			EQUIPMENT_AADR =
			#{equipment_aadr,jdbcType=VARCHAR},
			reasons =
			#{reasons,jdbcType=VARCHAR}
		</set>
		where pk_id=#{pk_id}
	</update>
	
	
		<!-- 审核 修改审核状态 -->
	<update id="examineRegister" parameterType="java.util.HashMap">

		update SSSB_EQUIPMENT_REGISTER
		<set>
			status = #{status,jdbcType=VARCHAR}
			<if test="reasons != null and reasons != '' ">
			,reasons = #{reasons,jdbcType=VARCHAR}
			</if>
		</set>
		where pk_id=#{pk_id}
	</update>

	
	<!-- 更新设备信息 -->
	<update id="updateGather" parameterType="java.util.HashMap">

		update SSSB_EQUIPMENT_GATHER
		<set>
			EQUIPMENT_MODEL = #{equipment_model,jdbcType=VARCHAR},
			EQUIPMENT_TYPE = #{sblx,jdbcType=VARCHAR},
			FK_DEPT_ID = #{fk_dept_id,jdbcType=NUMERIC},
			CHARGER_PERSON = #{charger_person,jdbcType=VARCHAR},
			CHARGER_CONTACT_NUMBER = #{charger_contact_number,jdbcType=VARCHAR},
			IP_ADDR = #{ip_addr,jdbcType=VARCHAR},
			MAC_ADDR = #{mac_addr,jdbcType=VARCHAR},
			PORT = #{port,jdbcType=VARCHAR},
			DESCRIPTION = #{description,jdbcType=VARCHAR},
			SUPPLIER = #{supplier,jdbcType=VARCHAR},
			SUPPLIER_CONTACT_NUMBER = #{supplier_contact_number,jdbcType=VARCHAR}
		</set>
		where FK_EQUIPMENT_ID = #{pk_id}
	</update>

	<!--删除设备注册信息 -->
	<delete id="deleteRegister">
		delete from SSSB_EQUIPMENT_REGISTER
		<where>
			pk_id in
			<foreach item="item" collection="pkList" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</where>
	</delete>
	<!-- 删除设备信息 -->
	<delete id="deleteGather">
		delete from SSSB_EQUIPMENT_GATHER
		<where>
			FK_EQUIPMENT_ID in
			<foreach item="item" collection="pkList" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</where>
	</delete>
	<!--管理下拉树查询 -->
	<select id="depart_infolist"
		resultType="com.cist.devmanagement.model.DeptInfo"
		parameterType="java.lang.Integer">
		select t.dept_pk,t.dept_code,t.dept_name as name,t.DEPT_SUPERIOR from
		sys_depart_info t
		<where>
			<if test="_parameter  == null or _parameter  == ''">
				t.DEPT_SUPERIOR is null
			</if>
			<if test="_parameter  != null and _parameter  != ''">
				t.DEPT_SUPERIOR=#{_parameter}
			</if>
		</where>
	</select>
	<!--基础数据下拉列表查询 -->
	<select id="selectSysFrmCode"
		resultType="com.cist.devmanagement.model.Sys_frm_code"
		parameterType="java.lang.String">
		select * from SYS_FRM_CODE
		where
		FCT_CODE=#{fct_code}
	</select>
	
		<!--查询已备案数据 -->
	<select id="selectDev"
		resultType="com.cist.devmanagement.model.JcsjDevice"
		parameterType="java.lang.String">
		select * from VW_SSSB_EQUIPMENT_GATHER_DEV
		<where>
		<if test="xzqh != null and xzqh != ''">
		and xzqh = #{xzqh}
		</if>
		<if test="fk_dept_id != null and fk_dept_id != ''">
		and fk_dept_id = #{fk_dept_id}
		</if>
		<if test="equipment_name != null and equipment_name != ''">
		and device_name  like '%'||#{equipment_name}||'%'
		</if>
		<if test="sblx != null and sblx != ''">
		and fk_device_type = #{sblx}
		</if>
		<if test="roadList != null and roadList.size() >0">
		and belonged_road_id  in 
		<foreach item="item" collection="roadList" open="("
				separator="," close=")">
				#{item}
			</foreach>
		
		</if>
		<if test="ip_address != null and ip_address != ''">
		and ip_address like '%'||#{ip_address}||'%'
		</if>
		</where>
	</select>
	
			<!--根据部门code查询部门id -->
	<select id="selectDeptId"
		resultType="com.cist.devmanagement.model.DeptInfo"
		parameterType="java.util.HashMap">
		select * from SYS_DEPART_INFO
		where dept_code = #{dept_code}
	</select>
	
	 <!--  批量导入-->
	<insert id="batchAdd"   parameterType="java.util.List">
<selectKey keyColumn="pk_id" keyProperty="pk_id" resultType="java.lang.Integer" order="BEFORE">  
            select cistsys.SEQ_SSSB_EQUIPMENT_REGISTER.NEXTVAL as pk_id from dual  
        </selectKey> 
	insert into SSSB_EQUIPMENT_REGISTER
	<trim prefix="(" suffixOverrides="," suffix=")">
		PK_ID,
		EQUIPMENT_TYPE,
		EQUIPMENT_NAME,
		DAC_IP,
		EQUIPMENT_AADR,
		STATUS,
		reasons
	</trim>

	select cistsys.SEQ_SSSB_EQUIPMENT_REGISTER.NEXTVAL,cd.* from(
	<foreach item="dv" index="index" collection="list" separator="union all"> 
         SELECT  
         
			#{dv.equipment_type,jdbcType=VARCHAR},
			#{dv.device_name,jdbcType=VARCHAR},
			#{dv.dac_ip,jdbcType=VARCHAR},
			#{dv.road_name,jdbcType=VARCHAR},
			#{dv.status,jdbcType=VARCHAR},
			#{dv.reasons,jdbcType=VARCHAR}
			
			
		FROM DUAL 
    </foreach >
		)cd
</insert>


<!--  新增设备注册信息 -->
	<insert id="batchAddRegister" parameterType="java.util.HashMap">
		<selectKey keyProperty="pk_id"
			resultType="java.lang.Integer" order="BEFORE">
			select
			cistsys.SEQ_SSSB_EQUIPMENT_REGISTER.NEXTVAL as pk_id from dual
		</selectKey>
		insert into SSSB_EQUIPMENT_REGISTER
		(PK_ID,EQUIPMENT_TYPE,EQUIPMENT_NAME,DAC_IP,EQUIPMENT_AADR,STATUS,reasons)
		values(
		#{pk_id},
		#{equipment_type},
		#{device_name},
		#{dac_ip},
		#{road_name,jdbcType=VARCHAR},
		'2',
		#{reasons,jdbcType=VARCHAR}
		)
	</insert>
	
	
	<!-- 新增设备信息 -->
	<insert id="batchAddGather" parameterType="java.util.HashMap">
		insert into
		SSSB_EQUIPMENT_GATHER
		(FK_EQUIPMENT_ID,EQUIPMENT_MODEL,EQUIPMENT_TYPE,FK_DEPT_ID,CHARGER_PERSON
		,CHARGER_CONTACT_NUMBER,IP_ADDR,MAC_ADDR,PORT,DESCRIPTION,SUPPLIER,SUPPLIER_CONTACT_NUMBER)
		values(
		#{pk_id},
		#{equipment_model,jdbcType=VARCHAR},
		#{fk_device_type},
		(select DEPT_PK from SYS_DEPART_INFO t1 where t1.DEPT_CODE =#{fk_dept_id}),
		#{charger_person,jdbcType=VARCHAR},
		#{charger_contact_number,jdbcType=VARCHAR},
		#{ip_addr,jdbcType=VARCHAR},
		#{mac_addr,jdbcType=VARCHAR},
		#{port,jdbcType=VARCHAR},
		#{description,jdbcType=VARCHAR},
		#{supplier,jdbcType=VARCHAR},
		#{supplier_contact_number,jdbcType=VARCHAR}
		)
	</insert>
	
	<!-- 查询所有道路 -->
	<select id="queryAllRoad"
		resultType="com.cist.devmanagement.model.RoadTree" parameterType="java.util.HashMap">
		select roim_code key,roim_name title,roim_type road_type
		from C_ROAD_ITEM  where 1=1
		<if test="tbek_code !=null and tbek_code !=''">
		and instr(tbek_code,#{tbek_code})>0
		</if>
		<if test="dept_code !=null and dept_code !=''">
		and dept_code=#{dept_code}
		</if>
	</select>
	<!-- 根据道路code查询路口路段 -->
	<select id="queryRoadSegiteByRoadCode"
		parameterType="java.util.HashMap"
		resultType="com.cist.devmanagement.model.RoadTree">
		select s.DLDM||s.LKDM key,s.LKMC title from C_ROAD_SEGITEM
		s where s.DLDM=#{code}
	</select>
	
	<!-- 行政区划Tree查询 -->
	<select id="queryAdministrativeAreas1"
		parameterType="java.util.HashMap"
		resultType="com.cist.devmanagement.model.RoadTree">
		select t.tbek_pk pk,t.tbek_code key,t.tbek_name title,t.tbek_parent
		parent_pk from C_KREIS_CODE t  where 1=1
			
			<if test="tbek_code !=null and tbek_code !=''">
				and t.tbek_code=#{tbek_code}
			</if>
			<if test="tbek_code ==null">
				<if test="parent_pk !=null and parent_pk !=''">
				and t.tbek_parent=#{parent_pk}
			</if>
			<if test="parent_pk ==null">
				and t.TBEK_PARENT is null
			</if>
			</if>
	</select>
	
		<!-- 行政区划下级-->
<select id="kreisList" resultType="com.cist.devmanagement.model.CKreisCode">
		select *  from C_KREIS_CODE
		<where>
		<if test=" _parameter !=null and _parameter !=''">
		TBEK_PARENT =#{_parameter}
		</if>
		</where>
	</select>
<!-- 顶级行政区划 或上级行政区划-->
<select id="kreis" resultType="com.cist.devmanagement.model.CKreisCode">
		select *  from C_KREIS_CODE
		<where>
		<if test=" tbek_parent==null">
		TBEK_PARENT is NULL
		</if>
		<if test=" tbek_parent !=null and tbek_parent !=''">
		TBEK_PARENT =#{tbek_parent}
		</if>
		</where>
	</select>
</mapper>